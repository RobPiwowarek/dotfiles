alias please='sudo'
alias ls.='ls -d .* --color=auto'
alias mount='mount |column -t'

alias path='echo -e ${PATH//:/\\n}'
alias now='date +"%T"'
alias nowtime=now
alias nowdate='date +"%d-%m-%Y"'

alias untar='tar -zxvf '
alias getpass="openssl rand -base64 20"
alias serve='python -m SimpleHTTPServer 8000'
alias ipe='curl ipinfo.io/ip'
alias ipl='ipconfig getifaddr en0'

alias c='clear'
alias h='cd ~/'

alias lsh='ls -lisAd .[^.]*'

alias vmstat='vm_stat'

alias showfiles="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hidefiles="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"
alias ofd='open_command $PWD

alias zshconfig="vim ~/.zshrc"
alias ohmyzsh='vim ~/.oh-my-zsh'

alias reload-sh='source ~/.zshrc'

decodeb64() {
    echo "$1" | base64 --decode | pbcopy
}

tab() {
  # Must not have trailing semicolon, for iTerm compatibility
  local command="cd \\\"$PWD\\\"; clear"
  (( $# > 0 )) && command="${command}; $*"

  local the_app=$(_omz_osx_get_frontmost_app)

  if [[ "$the_app" == 'Terminal' ]]; then
    # Discarding stdout to quash "tab N of window id XXX" output
    osascript >/dev/null <<EOF
      tell application "System Events"
        tell process "Terminal" to keystroke "t" using command down
      end tell
      tell application "Terminal" to do script "${command}" in front window
EOF

  elif [[ "$the_app" == 'iTerm' ]]; then
    osascript <<EOF
      tell application "iTerm"
        set current_terminal to current terminal
        tell current_terminal
          launch session "Default Session"
          set current_session to current session
          tell current_session
            write text "${command}"
          end tell
        end tell
      end tell
EOF

  elif [[ "$the_app" == 'iTerm2' ]]; then
      osascript <<EOF
        tell application "iTerm2"
          tell current window
            create tab with default profile
            tell current session to write text "${command}"
          end tell
        end tell
EOF

  else
    echo "tab: unsupported terminal app: $the_app"
    false

  fi
}
